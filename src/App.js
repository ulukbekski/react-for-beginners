
import './index.scss'
import React from 'react';
import {
  Routes,
  Route,
  Link,
  useNavigate,
  useLocation,
  Navigate,
  Outlet,
} from 'react-router-dom';
import { fakeAuthProvider } from './auth';


const Public = () => <h3>–ü—É–±–ª–∏—á–Ω–∞—è —á–∞—Å—Ç—å —Å–∞–π—Ç–∞ </h3>
const Private = () => <h3>–û—á–µ–Ω—å –ø—Ä–∏–≤–∞—Ç–Ω–∞—è —á–∞—Å—Ç—å —Å–∞–π—Ç–∞üíÄüíÄüíÄüíÄüíÄ</h3>
const Border = ({ children }) => <div className='border'>{children}</div>



export default function App() {
  return (
    <AuthProvider>
      <div className="App">

        <h1>–ü—Ä–∏–º–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</h1>

        <p>–í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É —Å —Ç—Ä–µ–º—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏:
          —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –∑–∞—â–∏—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–π
          —Å—Ç—Ä–∞–Ω–∏—Ü—É, –≤—ã –¥–æ–ª–∂–Ω—ã —Å–Ω–∞—á–∞–ª–∞ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –î–æ–≤–æ–ª—å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–µ—â–∏.
        </p>

        <p>–í–æ-–ø–µ—Ä–≤—ã—Ö, –ø–æ—Å–µ—Ç–∏—Ç–µ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ó–∞—Ç–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          –í—ã –µ—â–µ –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É, –ø–æ—ç—Ç–æ–º—É –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞.
          –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
        </p>

        <p>
          –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL-–∞–¥—Ä–µ—Å–∞ –∫–∞–∂–¥—ã–π —Ä–∞–∑. –ï—Å–ª–∏ –≤—ã –Ω–∞–∂–º–µ—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞–∑–∞–¥¬ª –≤ —ç—Ç–æ–º
          —Ç–æ—á–∫–∞, –≤—ã –æ–∂–∏–¥–∞–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞? –ù–µ—Ç! —Ç—ã —É–∂–µ
          –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ, –∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã
          –ø–æ—Å–µ—Ç–∏–ª —Ç–æ–ª—å–∫–æ *–ø–µ—Ä–µ–¥* –≤—Ö–æ–¥–æ–º –≤ —Å–∏—Å—Ç–µ–º—É –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
        </p>

        <Routes>
          <Route element={<Layout />}>
            <Route path='/' element={<Border><Public /></Border>} />
            <Route path='/private' element={<Border><Private /></Border>} />
          </Route>
        </Routes>
      </div>
    </AuthProvider>
  );
}
const Layout = () =>
  <ul>
    <AuthStatus/>
    <li>
      <Link to="/">–ü—É–±–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</Link>
    </li>
    <li>
      <Link to="/private">–ü—Ä–∏–≤–∞—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</Link>
    </li>
    <Outlet />
  </ul>

const AuthContext = React.createContext(null)

function AuthProvider({ children }) {

  const [user, setUser] = React.useState(null)

  const signin = (newUser) => {
    return fakeAuthProvider.signin(() => {
      setUser(newUser);
    })
  }

  const signout = () => {
    return fakeAuthProvider.signout(() => {
      setUser(null);
    })
  }

  const value = { user, signin, signout }

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>
  }

  const useAuth = () => {
    return React.useContext(AuthContext)
  }
  
  function AuthStatus(){
    const auth = useAuth()
    const navigate = useNavigate();
    
    if(!auth.user){
      return (<h3>U r not logged in</h3>)
    }

    return(
      <p>
        Welocome {auth.user}
        <button
        onClick={()=>{
          auth.signout(()=> navigate('/'))
        }}>
          Sign out
        </button>
      </p>
    )
  }


  function RequireAuth({children}){
    const auth = useAuth()
    const location = useLocation()

    if(!auth.user){
      return <Navigate to="/login" state={{from : location}}   replace />
    }
  }





